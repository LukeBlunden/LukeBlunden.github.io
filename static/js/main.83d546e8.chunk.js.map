{"version":3,"sources":["components/List/ListItem/ListItem.js","components/UI/DeleteButton/DeleteButton.js","components/List/List.js","components/NewList/NewList.js","components/UI/AddButton/AddButton.js","containers/Lists/Lists.js","App.js","index.js"],"names":["styled","li","props","show","listItem","DeleteButton","button","deleteButton","onClick","clicked","xmlns","viewBox","className","d","ListCard","div","NewItem","form","List","listItems","info","items","map","item","console","log","ListItem","text","key","title","onSubmit","submit","name","id","type","onChange","e","changed","value","newItem","autoFocus","time","hidden","listDelete","NewList","TitleInput","newList","AddButton","addButton","ListsContainer","Lists","state","listCounter","lists","complete","draggedList","inputChangeHandler","updateLists","list","target","setState","itemAddHandler","preventDefault","forEach","push","window","localStorage","setItem","JSON","stringify","document","querySelector","focus","itemDoneHandler","updatedLists","updatedItems","itm","itemDeleteHandler","newListHandler","titleChangeHandler","newListSubmit","newListCounter","listDeleteHandler","filter","dragStart","children","innerText","dragOver","dragEnter","droppedOnObject","targetedList","draggedIndex","findIndex","trim","droppedIndex","removedItem","splice","onDrop","getItem","parse","this","itemDelete","itemDone","Component","Container","App","ReactDOM","render","getElementById"],"mappings":"wiCAGuBA,IAAOC,GAAV,KAMK,SAACC,GAAD,OAAYA,EAAMC,KAAN,uBAIb,SAACD,GAAD,OAAYA,EAAMC,KAAN,yBAVpC,IA0DeC,EApBE,SAACF,K,qdCtClB,IAAMG,EAAeL,IAAOM,OAAV,KAuCHC,EAdM,SAACL,GACpB,OACE,kBAACG,EAAD,CAAcG,QAASN,EAAMO,SAC3B,yBAAKC,MAAM,6BAA6BC,QAAQ,aAE9C,0BACEC,UAAU,MACVC,EAAE,oI,s6BC3BZ,IAAMC,EAAWd,IAAOe,IAAV,KAmBRC,EAAUhB,IAAOiB,KAAV,KAoFEC,EAzDF,SAAChB,GACZ,IAAIiB,EAAY,GA6BhB,OAPIjB,EAAMkB,KAAKC,QACbF,EAAYjB,EAAMkB,KAAKC,MAAMC,KAAI,SAACC,GAEhC,OADAC,QAAQC,IAAIF,GACJ,kBAACG,EAAD,CAAUC,KAAMJ,EAAKI,KAAMC,IAAKL,EAAKI,MAAOJ,EAAKI,UAK3D,kBAACb,EAAD,KACE,4BAAKZ,EAAMkB,KAAKS,OAChB,4BAAKV,GACL,kBAACH,EAAD,CAASc,SAAU5B,EAAM6B,OAAQC,KAAM9B,EAAMkB,KAAKa,IAChD,2BACEC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOlC,EAAMmC,QAAQnC,EAAMkB,KAAKa,GAAIG,IAC9CJ,KAAM,OACNM,MAAOpC,EAAMkB,KAAKmB,QAAQZ,KAC1BM,GAAE,mBAAc/B,EAAMkB,KAAKa,IAC3BO,WAAS,IAEX,2BACEN,KAAK,OACLtB,UAAW,OACXuB,SAAU,SAACC,GAAD,OAAOlC,EAAMmC,QAAQnC,EAAMkB,KAAKa,GAAIG,IAC9CJ,KAAM,OACNM,MAAOpC,EAAMkB,KAAKmB,QAAQE,OAE5B,2BAAOP,KAAK,SAASQ,QAAM,KAE7B,kBAAC,EAAD,CAAcjC,QAAS,kBAAMP,EAAMyC,WAAWzC,EAAMkB,KAAKa,S,ufCvG/D,IAAMW,EAAU5C,IAAOe,IAAV,KASP8B,EAAa7C,IAAOiB,KAAV,KAgCD6B,EAjBC,SAAC5C,GACf,OACE,kBAAC0C,EAAD,KACE,kBAACC,EAAD,CAAYf,SAAU5B,EAAM6B,QAC1B,2BACEG,KAAK,OACLC,SAAUjC,EAAMmC,QAChBL,KAAM,QACNM,MAAOpC,EAAM4C,QAAQjB,MACrBW,WAAS,IAEX,2BAAON,KAAK,SAASQ,QAAM,O,uVCnCnC,IAAMK,EAAY/C,IAAOM,OAAV,KAsBA0C,EAJG,SAAC9C,GACjB,OAAO,kBAAC6C,EAAD,CAAWvC,QAASN,EAAMO,SAA1B,M,0JCbT,IAAMwC,EAAiBjD,IAAOe,IAAV,KA0OLmC,E,4MAlObC,MAAQ,CACNC,YAAa,EACbN,QAAS,GACTO,MAAO,CACL,CACEpB,GAAI,EACJJ,MAAO,iBACPR,MAAO,GAIPkB,QAAS,CAAEZ,KAAM,GAAIc,KAAM,GAAIa,UAAU,KAI7CC,YAAa,I,EAkBfC,mBAAqB,SAACvB,EAAIG,GACxB,IACMqB,EADK,YAAO,EAAKN,MAAME,OACH/B,KAAI,SAACoC,GAI7B,OAHIA,EAAKzB,KAAOA,IACdyB,EAAKnB,QAAQH,EAAEuB,OAAO3B,MAAQI,EAAEuB,OAAOrB,OAElCoB,KAET,EAAKE,SAAS,CAAEP,MAAOI,K,EAIzBI,eAAiB,SAACzB,GAEhBA,EAAE0B,iBAEF,IAAMT,EAAK,YAAO,EAAKF,MAAME,OAC7BA,EAAMU,SAAQ,SAACL,GAETA,EAAKzB,IAAMG,EAAEuB,OAAO3B,OACtB0B,EAAKrC,MAAM2C,KAAKN,EAAKnB,SAErBmB,EAAKnB,QAAU,CAAEZ,KAAM,GAAIc,KAAM,GAAIa,UAAU,GAC/C,EAAKM,SAAS,CAAEP,MAAOA,IAEvBY,OAAOC,aAAaC,QAAQ,QAASC,KAAKC,UAAU,EAAKlB,MAAME,SAGjEiB,SAASC,cAAT,oBAAoCb,EAAKzB,KAAMuC,Y,EAKnDC,gBAAkB,SAACxC,EAAIV,GACrB,IACMmD,EADK,YAAO,EAAKvB,MAAME,OACF/B,KAAI,SAACoC,GAE9B,GAAIA,EAAKzB,IAAMA,EAAI,CACjB,IAAM0C,EAAejB,EAAKrC,MAAMC,KAAI,SAACsD,GAMnC,OAJIA,IAAQrD,IAEVqD,EAAItB,UAAYsB,EAAItB,UAEfsB,KAETlB,EAAKrC,MAAQsD,EAEf,OAAOjB,KAET,EAAKE,SAAS,CAAEP,MAAOqB,IACvBT,OAAOC,aAAaC,QAAQ,QAASC,KAAKC,UAAU,EAAKlB,MAAME,S,EAIjEwB,kBAAoB,SAACtD,GACnBC,QAAQC,IAAIF,I,EAIduD,eAAiB,WACf,IAAMhC,EAAU,CACdb,GAAI,EAAKkB,MAAMC,YAAc,EAC7BvB,MAAO,GACPR,MAAO,GACPkB,QAAS,CAAEZ,KAAM,GAAIc,KAAM,GAAIa,UAAU,IAE3C,EAAKM,SAAS,CAAEd,QAASA,K,EAI3BiC,mBAAqB,SAAC3C,GACpB,IAAMU,EAAO,eAAQ,EAAKK,MAAML,SAChCA,EAAQjB,MAAQO,EAAEuB,OAAOrB,MACzB,EAAKsB,SAAS,CAAEd,QAASA,K,EAI3BkC,cAAgB,SAAC5C,GAEfA,EAAE0B,iBACF,IAAMT,EAAK,YAAO,EAAKF,MAAME,OAE7BA,EAAMW,KAAK,EAAKb,MAAML,SAEtB,IAAMmC,EAAiB,EAAK9B,MAAMC,YAAc,EAEhD,EAAKQ,SAAS,CAAEd,QAAS,GAAIO,MAAOA,EAAOD,YAAa6B,IAExDhB,OAAOC,aAAaC,QAAQ,QAASC,KAAKC,UAAU,EAAKlB,MAAME,QAC/DY,OAAOC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUY,K,EAI5DC,kBAAoB,SAACjD,GACnB,IAEMyC,EAFK,YAAO,EAAKvB,MAAME,OAEF8B,QAAO,SAACzB,GAAD,OAAUA,EAAKzB,IAAMA,KAEvD,EAAK2B,SAAS,CAAEP,MAAOqB,IAEvBT,OAAOC,aAAaC,QAAQ,QAASC,KAAKC,UAAUK,K,EAItDU,UAAY,SAAChD,GAEX,EAAKwB,SAAS,CAAEL,YAAanB,EAAEuB,OAAO0B,SAAS,GAAGC,a,EAGpDC,SAAW,SAACnD,GACVA,EAAE0B,kB,EAIJ0B,UAAY,SAACvD,EAAIG,GAEf,IAAMqD,EAAkBrD,EAAEuB,OAAO2B,UAE3BjC,EAAK,YAAO,EAAKF,MAAME,OAEvBqC,EAAY,eAAQrC,EAAM8B,QAAO,SAACzB,GAAD,OAAUA,EAAKzB,KAAOA,MAEvD0D,EAAeD,EAAa,GAAGrE,MAAMuE,WACzC,SAACrE,GAAD,OAAUA,EAAKI,KAAKkE,SAAW,EAAK1C,MAAMI,YAAYsC,UAElDC,EAAeJ,EAAa,GAAGrE,MAAMuE,WACzC,SAACrE,GAAD,OAAUA,EAAKI,KAAKkE,SAAWJ,EAAgBI,UAI3CxE,EAAK,YAAOqE,EAAa,GAAGrE,OAE5B0E,EAAc1E,EAAM2E,OAAOL,EAAc,GAE/CtE,EAAM2E,OAAOF,EAAc,EAAGC,EAAY,IAG1C,IAAMrB,EAAerB,EAAM/B,KAAI,SAACoC,GAI9B,OAHIA,EAAKzB,KAAOyD,EAAa,GAAGzD,KAC9ByB,EAAKrC,MAAL,YAAiBA,IAEZqC,KAGT,EAAKE,SAAS,CAAEP,MAAOqB,K,EAIzBuB,OAAS,SAAChE,EAAIG,GACZA,EAAE0B,iBACF,EAAK0B,UAAUvD,EAAIG,GACnB6B,OAAOC,aAAaC,QAAQ,QAASC,KAAKC,UAAU,EAAKlB,MAAME,S,kEArK/D,GAAIY,OAAOC,aAAagC,QAAQ,SAAU,CACxC,IAAM7C,EAAQe,KAAK+B,MAAMlC,OAAOC,aAAagC,QAAQ,UACrDE,KAAKxC,SAAS,CAAEP,MAAOA,IAEzB,GAAIY,OAAOC,aAAagC,QAAQ,eAAgB,CAC9C,IAAM9C,EAAcgB,KAAK+B,MACvBlC,OAAOC,aAAagC,QAAQ,gBAE9BE,KAAKxC,SAAS,CAAER,YAAaA,O,+BAgKvB,IAAD,OACDC,EAAQ+C,KAAKjD,MAAME,MAAM/B,KAAI,SAACoC,GAAD,OACjC,kBAAC,EAAD,CACE9B,IAAK8B,EAAKzB,GACVb,KAAMsC,EACN3B,OAAQ,EAAK8B,eACbxB,QAAS,EAAKmB,mBACdb,WAAY,EAAKuC,kBACjBmB,WAAY,EAAKxB,kBACjByB,SAAU,EAAK7B,gBACfW,UAAW,EAAKA,UAChBG,SAAU,EAAKA,SACfC,UAAW,SAACpD,GAAD,OAAO,EAAKoD,UAAU9B,EAAKzB,GAAIG,IAC1C6D,OAAQ,SAAC7D,GAAD,OAAO,EAAK6D,OAAOvC,EAAKzB,GAAIG,SAIpCU,EAAU,KAWd,OAVIsD,KAAKjD,MAAML,UACbA,EACE,kBAAC,EAAD,CACEA,QAASsD,KAAKjD,MAAML,QACpBT,QAAS+D,KAAKrB,mBACdhD,OAAQqE,KAAKpB,iBAMjB,kBAAC/B,EAAD,KACGI,EACAP,EACD,kBAAC,EAAD,CAAWrC,QAAS2F,KAAKtB,sB,GA7NbyB,a,+NCLpB,IAAMC,EAAYxG,IAAOe,IAAV,KAoBA0F,E,uKATX,OACE,kBAACD,EAAD,KACE,kBAAC,EAAD,W,GAJUD,aCflBG,IAASC,OAAO,kBAAC,EAAD,MAASrC,SAASsC,eAAe,W","file":"static/js/main.83d546e8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledListItem = styled.li`\r\n  display: grid;\r\n  max-width: 100%;\r\n  grid-template-columns: 4fr 1fr;\r\n  justify-content: space-between;\r\n  background-color: #f7f9fc;\r\n  /* background-color: ${(props) => (props.show ? `#F7F9FC` : `#FFEFCA`)}; */\r\n  border-radius: 1rem;\r\n  margin: 1rem auto;\r\n  cursor: pointer;\r\n  /* text-decoration: ${(props) => (props.show ? `none` : `line-through`)}; */\r\n\r\n  & label {\r\n    font-size: 1.6rem;\r\n    padding: 1rem;\r\n    cursor: pointer;\r\n    /* width: 100%; */\r\n  }\r\n\r\n  & .text {\r\n    /* max-width: 80%; */\r\n    word-wrap: break-word;\r\n  }\r\n\r\n  & .time {\r\n    border-radius: 0 1rem 1rem 0;\r\n    background-color: rgba(0, 0, 0, 0.01);\r\n    border: none;\r\n    /* width: 20%; */\r\n    text-align: center;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #f8d57e;\r\n    text-decoration: line-through;\r\n  }\r\n`;\r\n\r\nconst listItem = (props) => {\r\n  return (\r\n    // <ListItem onClick={props.itemDelete} >\r\n    // <ListItem\r\n    //   onClick={props.itemDone}\r\n    //   show={props.show}\r\n    //   draggable={\"true\"}\r\n    //   onDragStart={props.dragStart}\r\n    //   onDragEnter={props.onDrop}\r\n    //   onDragOver={props.dragOver}\r\n    //   onDrop={props.onDrop}\r\n    // >\r\n    //   <label className={\"text\"}>{props.item.text}</label>\r\n    //   <label className={\"time\"}>{props.item.time}</label>\r\n    // </ListItem>\r\n    <li>{props.text}</li>\r\n    // <StyledListItem>{props.text}</StyledListItem>\r\n  );\r\n};\r\n\r\nexport default listItem;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DeleteButton = styled.button`\r\n  background-color: transparent;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  border: none;\r\n  /* box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1); */\r\n  border-radius: 5rem;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  margin-top: 1rem;\r\n  outline: none;\r\n\r\n  & svg {\r\n    fill: lightgray;\r\n  }\r\n\r\n  &:hover > svg {\r\n    fill: #00C9B2;\r\n  }\r\n\r\n  /* &:active {\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n  } */\r\n`;\r\n\r\nconst deleteButton = (props) => {\r\n  return (\r\n    <DeleteButton onClick={props.clicked}>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n        {/* <style type=\"text/css\">{`.bin{fill:#1E232D;}`}</style> */}\r\n        <path\r\n          className=\"bin\"\r\n          d=\"M18 22H6V8H4v13.7C4 22.8 4.9 24 6 24h12c1.1 0 2-1.2 2-2.3V8h-2V22zM15 4V2H9v2H2v2h20V4H15zM9 10v10h2V10H9zM13 10v10h2V10H13z\"\r\n        />\r\n      </svg>\r\n    </DeleteButton>\r\n  );\r\n};\r\n\r\nexport default deleteButton;\r\n","// package import\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// component imports\r\nimport ListItem from \"./ListItem/ListItem\";\r\nimport DeleteButton from \"../UI/DeleteButton/DeleteButton\";\r\n\r\nconst ListCard = styled.div`\r\n  display: inline-block;\r\n  width: 30rem;\r\n  padding: 3rem;\r\n  background-color: #ffffff;\r\n  border-radius: 2rem;\r\n  margin: 1rem;\r\n\r\n  & h3 {\r\n    font-size: 2.4rem;\r\n    color: #f8d57e;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  & ul {\r\n    list-style: none;\r\n  }\r\n`;\r\n\r\nconst NewItem = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  /* background-color: #f7f9fc; */\r\n  border: 0.3rem solid #f7f9fc;\r\n  border-radius: 1rem;\r\n  margin: 1rem auto;\r\n\r\n  & input {\r\n    border: none;\r\n    font-size: 1.6rem;\r\n    padding: 1rem;\r\n    background-color: transparent;\r\n    outline: none;\r\n    width: 75%;\r\n\r\n    &.time {\r\n      padding: 0;\r\n      text-align: center;\r\n      font-size: 1.4rem;\r\n      width: 25%;\r\n      /* background-color: rgba(0, 0, 0, 0.01); */\r\n      border-left: 0.3rem solid #f7f9fc;\r\n    }\r\n  }\r\n`;\r\n\r\nconst List = (props) => {\r\n  let listItems = [];\r\n  // let listItems = [<ListItem item={props.info.items[0]} />];\r\n  // if (props.info.items !== []) {\r\n  // if (Array.isArray(props.info.items) && props.info.items.length) {\r\n  //   listItems = props.info.items.map((item) => {\r\n  //     console.log(item);\r\n  //     return <ListItem text={item.text} key={item.text}>{item.text}</ListItem>\r\n  //   }\r\n  //   // <ListItem\r\n  //   //   item={item}\r\n  //   //   key={item.text}\r\n  //   //   itemDelete={() => props.itemDelete(item)}\r\n  //   //   itemDone={() => props.itemDone(props.info.id, item)}\r\n  //   //   show={!item.complete}\r\n  //   //   dragStart={props.dragStart}\r\n  //   //   dragOver={props.dragOver}\r\n  //   //   dragEnter={props.dragEnter}\r\n  //   //   onDrop={props.onDrop}\r\n  //   // />\r\n  //   );\r\n  // }\r\n\r\n  if (props.info.items) {\r\n    listItems = props.info.items.map((item) => {\r\n      console.log(item);\r\n      return (<ListItem text={item.text} key={item.text}>{item.text}</ListItem>)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ListCard>\r\n      <h3>{props.info.title}</h3>\r\n      <ul>{listItems}</ul>\r\n      <NewItem onSubmit={props.submit} name={props.info.id}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => props.changed(props.info.id, e)}\r\n          name={\"text\"}\r\n          value={props.info.newItem.text}\r\n          id={`textInput${props.info.id}`}\r\n          autoFocus\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className={\"time\"}\r\n          onChange={(e) => props.changed(props.info.id, e)}\r\n          name={\"time\"}\r\n          value={props.info.newItem.time}\r\n        />\r\n        <input type=\"submit\" hidden />\r\n      </NewItem>\r\n      <DeleteButton clicked={() => props.listDelete(props.info.id)} />\r\n    </ListCard>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NewList = styled.div`\r\n  display: inline-block;\r\n  width: 30rem;\r\n  padding: 3rem;\r\n  background-color: #ffffff;\r\n  border-radius: 2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nconst TitleInput = styled.form`\r\n  border: 0.3rem solid #f7f9fc;\r\n  border-radius: 1rem;\r\n  width: 75%;\r\n\r\n  & input {\r\n    border: none;\r\n    font-size: 1.6rem;\r\n    padding: 1rem;\r\n    background-color: transparent;\r\n    outline: none;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst newList = (props) => {\r\n  return (\r\n    <NewList>\r\n      <TitleInput onSubmit={props.submit} >\r\n        <input\r\n          type=\"text\"\r\n          onChange={props.changed}\r\n          name={\"title\"}\r\n          value={props.newList.title}\r\n          autoFocus\r\n        />\r\n        <input type=\"submit\" hidden />\r\n      </TitleInput>\r\n    </NewList>\r\n  );\r\n};\r\n\r\nexport default newList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AddButton = styled.button`\r\n  margin-left: -7rem;\r\n  margin-top: 2rem;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-radius: 2rem;\r\n  cursor: pointer;\r\n  font-size: 4rem;\r\n  color: lightgray;\r\n  height: 4rem;\r\n  width: 4rem;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    color: #00c9b2;\r\n  }\r\n`;\r\n\r\nconst addButton = (props) => {\r\n  return <AddButton onClick={props.clicked}>+</AddButton>;\r\n};\r\n\r\nexport default addButton;\r\n","// package imports\r\nimport React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Component imports\r\nimport List from \"../../components/List/List\";\r\nimport NewList from \"../../components/NewList/NewList\";\r\nimport AddButton from \"../../components/UI/AddButton/AddButton\";\r\n\r\nconst ListsContainer = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nclass Lists extends Component {\r\n  state = {\r\n    listCounter: 1,\r\n    newList: \"\",\r\n    lists: [\r\n      {\r\n        id: 1,\r\n        title: \"The first list\",\r\n        items: [\r\n          // { text: \"first Item\", time: \"9am\", complete: false },\r\n          // { text: \"2nd Item\", time: \"10am\", complete: false },\r\n        ],\r\n        newItem: { text: \"\", time: \"\", complete: false },\r\n      },\r\n    ],\r\n    // Required for drag preview as we cannot access getData()\r\n    draggedList: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Retrieve local storage data for lists and list counter\r\n    if (window.localStorage.getItem(\"lists\")) {\r\n      const lists = JSON.parse(window.localStorage.getItem(\"lists\"));\r\n      this.setState({ lists: lists });\r\n    }\r\n    if (window.localStorage.getItem(\"listCounter\")) {\r\n      const listCounter = JSON.parse(\r\n        window.localStorage.getItem(\"listCounter\")\r\n      );\r\n      this.setState({ listCounter: listCounter });\r\n    }\r\n  }\r\n\r\n  // Handles input value and state update on list items\r\n  inputChangeHandler = (id, e) => {\r\n    const lists = [...this.state.lists];\r\n    const updateLists = lists.map((list) => {\r\n      if (list.id === id) {\r\n        list.newItem[e.target.name] = e.target.value;\r\n      }\r\n      return list;\r\n    });\r\n    this.setState({ lists: updateLists });\r\n  };\r\n\r\n  // Handles pushing new list items onto their list\r\n  itemAddHandler = (e) => {\r\n    // Prevent form submission\r\n    e.preventDefault();\r\n    // Copy state lists array\r\n    const lists = [...this.state.lists];\r\n    lists.forEach((list) => {\r\n      // Check for matching list\r\n      if (list.id == e.target.name) {\r\n        list.items.push(list.newItem);\r\n        // Reset blank new list item\r\n        list.newItem = { text: \"\", time: \"\", complete: false };\r\n        this.setState({ lists: lists });\r\n        // Update local storafe\r\n        window.localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n      }\r\n      // Set the blank text input to be focuses instead of time input\r\n      document.querySelector(`#textInput${list.id}`).focus();\r\n    });\r\n  };\r\n\r\n  // Sets complete status of items\r\n  itemDoneHandler = (id, item) => {\r\n    const lists = [...this.state.lists];\r\n    const updatedLists = lists.map((list) => {\r\n      //Check for matching list in lists\r\n      if (list.id == id) {\r\n        const updatedItems = list.items.map((itm) => {\r\n          // Check for matching list item\r\n          if (itm === item) {\r\n            // Reverse it's complete status\r\n            itm.complete = !itm.complete;\r\n          }\r\n          return itm;\r\n        });\r\n        list.items = updatedItems;\r\n      }\r\n      return list;\r\n    });\r\n    this.setState({ lists: updatedLists });\r\n    window.localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n  };\r\n\r\n  // WIP\r\n  itemDeleteHandler = (item) => {\r\n    console.log(item);\r\n  };\r\n\r\n  // Populates newList state w/ blanknewList object w/ updated id\r\n  newListHandler = () => {\r\n    const newList = {\r\n      id: this.state.listCounter + 1,\r\n      title: \"\",\r\n      items: [],\r\n      newItem: { text: \"\", time: \"\", complete: false },\r\n    };\r\n    this.setState({ newList: newList });\r\n  };\r\n\r\n  // Handles updating of newList title in state and input value\r\n  titleChangeHandler = (e) => {\r\n    const newList = { ...this.state.newList };\r\n    newList.title = e.target.value;\r\n    this.setState({ newList: newList });\r\n  };\r\n\r\n  // Handles submission of the new list\r\n  newListSubmit = (e) => {\r\n    // Prevent form submission\r\n    e.preventDefault();\r\n    const lists = [...this.state.lists];\r\n    // Push the newList object onto the lists state\r\n    lists.push(this.state.newList);\r\n    // Update list ID counter\r\n    const newListCounter = this.state.listCounter + 1;\r\n    // Reset newList state back to blank, update lists state and counter state\r\n    this.setState({ newList: \"\", lists: lists, listCounter: newListCounter });\r\n    // Update localStorage\r\n    window.localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n    window.localStorage.setItem(\"listCounter\", JSON.stringify(newListCounter));\r\n  };\r\n\r\n  // Handles list deletion\r\n  listDeleteHandler = (id) => {\r\n    const lists = [...this.state.lists];\r\n    // Filter for all lists that are not the deleted list\r\n    const updatedLists = lists.filter((list) => list.id != id);\r\n    // Set list state to this filtered list\r\n    this.setState({ lists: updatedLists });\r\n    // Update localStorage\r\n    window.localStorage.setItem(\"lists\", JSON.stringify(updatedLists));\r\n  };\r\n\r\n  // Initial drag operations\r\n  dragStart = (e) => {\r\n    // Save the text value for indexing\r\n    this.setState({ draggedList: e.target.children[0].innerText });\r\n  };\r\n\r\n  dragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  // Handlers drag preview sorting\r\n  dragEnter = (id, e) => {\r\n    // Gets hovered on object for indexing\r\n    const droppedOnObject = e.target.innerText;\r\n    // Copy of lists state\r\n    const lists = [...this.state.lists];\r\n    // Copy of list to be reordered\r\n    const targetedList = { ...lists.filter((list) => list.id === id) };\r\n    // Find index of dragged element and hovered on element\r\n    const draggedIndex = targetedList[0].items.findIndex(\r\n      (item) => item.text.trim() === this.state.draggedList.trim()\r\n    );\r\n    const droppedIndex = targetedList[0].items.findIndex(\r\n      (item) => item.text.trim() === droppedOnObject.trim()\r\n    );\r\n\r\n    // Copy of list items\r\n    const items = [...targetedList[0].items];\r\n    // Remove and assign item to be moved\r\n    const removedItem = items.splice(draggedIndex, 1);\r\n    // Insert removed item into targeted position\r\n    items.splice(droppedIndex, 0, removedItem[0]);\r\n\r\n    // update lists array with reordered items\r\n    const updatedLists = lists.map((list) => {\r\n      if (list.id === targetedList[0].id) {\r\n        list.items = [...items];\r\n      }\r\n      return list;\r\n    });\r\n    // Update state\r\n    this.setState({ lists: updatedLists });\r\n  };\r\n\r\n  // Same behaviour as above but on drop update the localStorage\r\n  onDrop = (id, e) => {\r\n    e.preventDefault();\r\n    this.dragEnter(id, e);\r\n    window.localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n  };\r\n\r\n  render() {\r\n    const lists = this.state.lists.map((list) => (\r\n      <List\r\n        key={list.id}\r\n        info={list}\r\n        submit={this.itemAddHandler}\r\n        changed={this.inputChangeHandler}\r\n        listDelete={this.listDeleteHandler}\r\n        itemDelete={this.itemDeleteHandler}\r\n        itemDone={this.itemDoneHandler}\r\n        dragStart={this.dragStart}\r\n        dragOver={this.dragOver}\r\n        dragEnter={(e) => this.dragEnter(list.id, e)}\r\n        onDrop={(e) => this.onDrop(list.id, e)}\r\n      />\r\n    ));\r\n\r\n    let newList = null;\r\n    if (this.state.newList) {\r\n      newList = (\r\n        <NewList\r\n          newList={this.state.newList}\r\n          changed={this.titleChangeHandler}\r\n          submit={this.newListSubmit}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ListsContainer>\r\n        {lists}\r\n        {newList}\r\n        <AddButton clicked={this.newListHandler} />\r\n      </ListsContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lists;\r\n","// Package imports\r\nimport React, { Component } from \"react\";\r\n// import { hot } from \"react-hot-loader\";\r\nimport styled from \"styled-components\";\r\n\r\n// css import\r\nimport \"./App.css\";\r\n\r\n// Component imports\r\nimport Lists from \"./containers/Lists/Lists\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-items: center;\r\n  background-color: #e6ebed;\r\n  /* background-color: #3ADDC2; */\r\n`;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Lists />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// export default hot(module)(App);\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}